{"version":3,"sources":["services/apolloClient.js","components/UserLookupOption/UserLookupOption.jsx","types/userSearchResultType.js","components/UserLookupOption/index.jsx","components/UserLookup/styles.js","components/UserLookup/UserLookup.jsx","components/UserLookup/dataTransformer.js","components/UserLookup/index.jsx","screens/SearchScreen/SearchScreen.jsx","types/reactRouter.js","screens/SearchScreen/index.jsx","types/repositoryType.js","types/organisationType.js","screens/UserScreen/UserScreen.jsx","types/userType.js","screens/UserScreen/dataTransformer.js","routes.js","screens/UserScreen/index.jsx","screens/RepositoriesScreen/RepositoriesScreen.jsx","screens/OrganisationsScreen/OrganisationsScreen.jsx","screens/NotFoundScreen/index.jsx","screens/NotFoundScreen/NotFoundScreen.jsx","App.jsx","index.jsx","components/UserLookup/queries.gql","screens/UserScreen/queries.gql"],"names":["httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","atob","process","client","ApolloClient","link","concat","cache","InMemoryCache","Main","PropTypes","shape","id","string","isRequired","username","name","repositoriesCount","number","organisationsCount","styled","display","justifyContent","alignItems","Bio","Counts","Name","fontWeight","marginRight","Username","color","UserLookupOption","node","indicatorSeparator","dropdownIndicator","control","backgroundColor","padding","width","UserLookup","loadOptions","onChange","useTranslation","t","placeholder","formatOptionLabel","styles","dataTransformer","results","search","edges","map","value","label","login","repositories","totalCount","organizations","withApollo","query","searchUsersQuery","variables","then","data","errors","SearchScreen","Grid","container","spacing","direction","justify","style","minHeight","locationType","hash","key","pathname","state","oneOfType","array","bool","object","withRouter","action","oneOf","block","func","canGo","createHref","entries","arrayOf","go","goBack","goForward","index","length","listen","location","push","replace","isExact","params","path","url","history","selectedOption","type","colour","GitHubAvatar","image","bio","repositoryType","totalRepositories","organisations","organisationType","totalOrganisations","borderRadius","StyledPaper","Paper","ColouredAvatar","Avatar","props","BioBox","Box","marginBottom","ListBox","UserScreen","user","isLoading","CircularProgress","Container","maxWidth","Typography","align","src","alt","variant","gutterBottom","Chip","List","dense","repository","ListItem","button","component","href","target","ListItemAvatar","ListItemText","primary","organisation","defaultProps","avatarUrl","edge","primaryLanguage","match","useQuery","getUserByUsernameQuery","loading","error","NotFoundScreen","App","apolloClient","basename","routes","route","exact","ReactDOM","render","document","getElementById","doc","loc","source","definitionRefs","findOperation","i","definitions","element","forEach","def","refs","Set","collectFragmentReferences","kind","add","selectionSet","selections","selection","variableDefinitions","module","exports","operationName","newDoc","hasOwnProperty","opRefs","allRefs","newRefs","refName","size","prevRefs","has","childRef","op","oneQuery"],"mappings":"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","file":"static/js/main.036ae976.chunk.js","sourcesContent":["import { ApolloClient } from 'apollo-boost';\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nconst httpLink = createHttpLink({\n  uri: 'https://api.github.com/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => ({\n  headers: {\n    ...headers,\n    authorization: `token ${atob(process.env.REACT_APP_TOKEN)}`,\n  },\n}));\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nexport default client;\n","import React from 'react';\nimport { styled } from '@material-ui/styles';\nimport StorgageIcon from '@material-ui/icons/Storage';\nimport WorkIcon from '@material-ui/icons/Work';\nimport userSearchResultType from '../../types/userSearchResultType';\n\nconst Main = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n});\n\nconst Bio = styled('div')({\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n});\n\nconst Counts = styled('div')({\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n});\n\nconst Name = styled('span')({\n  fontWeight: 'bold',\n  marginRight: '10px',\n});\n\nconst Username = styled('span')({\n  color: 'lightgrey',\n});\n\nconst UserLookupOption = ({\n  node,\n}) => (\n  <Main>\n    <Bio>\n      <Name>{node.name}</Name>\n      <Username>\n        (\n        {node.username}\n        )\n      </Username>\n    </Bio>\n    <Counts>\n      <Counts>\n        <StorgageIcon />\n        {`${node.repositoriesCount}`}\n      </Counts>\n      <Counts>\n        <WorkIcon />\n        {`${node.organisationsCount}`}\n      </Counts>\n    </Counts>\n  </Main>\n);\n\nUserLookupOption.propTypes = {\n  node: userSearchResultType.isRequired,\n};\n\nexport default UserLookupOption;\n","import PropTypes from 'prop-types';\n\nconst type = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  repositoriesCount: PropTypes.number.isRequired,\n  organisationsCount: PropTypes.number.isRequired,\n});\n\nexport default type;\n","import UserLookupOption from './UserLookupOption';\n\nexport default UserLookupOption;\n","export default {\n  indicatorSeparator: () => ({\n    display: 'none',\n  }),\n  dropdownIndicator: () => ({\n    display: 'none',\n  }),\n  control: () => ({\n    display: 'flex',\n    backgroundColor: 'white',\n    padding: '0.5em',\n    width: '50vw',\n  }),\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport AsyncSelect from 'react-select/async';\nimport UserLookupOption from '../UserLookupOption';\nimport styles from './styles';\n\nconst UserLookup = ({\n  loadOptions,\n  onChange,\n}) => {\n  const [t] = useTranslation();\n\n  return (\n    <AsyncSelect\n      placeholder={t('Github username or name')}\n      loadOptions={loadOptions}\n      formatOptionLabel={UserLookupOption}\n      styles={styles}\n      onChange={onChange}\n    />\n  );\n};\n\nUserLookup.propTypes = {\n  loadOptions: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default UserLookup;\n","const dataTransformer = (results) => results.search.edges.map(({ node }) => ({\n  value: node.id,\n  label: node.login,\n  node: {\n    id: node.id,\n    username: node.login,\n    name: node.login,\n    repositoriesCount: node.repositories.totalCount,\n    organisationsCount: node.organizations.totalCount,\n  },\n}));\n\nexport default dataTransformer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withApollo } from '@apollo/react-hoc';\nimport UserLookup from './UserLookup';\nimport dataTransformer from './dataTransformer';\nimport { searchUsersQuery } from './queries.gql';\n\nconst UserLookupContainer = ({\n  client,\n  onChange,\n}) => {\n  const loadOptions = (query) => client.query({\n    query: searchUsersQuery,\n    variables: {\n      query,\n    },\n  }).then(({ data, errors }) => {\n    if (errors) {\n      // TODO: add error into a global snackbar notification\n      return [];\n    }\n    return dataTransformer(data);\n  });\n\n  return (\n    <UserLookup\n      loadOptions={loadOptions}\n      onChange={onChange}\n    />\n  );\n};\n\nUserLookupContainer.propTypes = {\n  client: PropTypes.shape({\n    query: PropTypes.func.isRequired,\n  }).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default withApollo(UserLookupContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport UserLookup from '../../components/UserLookup';\n\nconst SearchScreen = ({\n  onChange,\n}) => (\n  <Grid\n    container\n    spacing={0}\n    direction=\"column\"\n    alignItems=\"center\"\n    justify=\"center\"\n    style={{ minHeight: '100vh' }}\n  >\n    <UserLookup onChange={onChange} />\n  </Grid>\n);\n\nSearchScreen.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SearchScreen;\n","import PropTypes from 'prop-types';\n\nexport const locationType = PropTypes.shape({\n  hash: PropTypes.string.isRequired,\n  key: PropTypes.string,\n  pathname: PropTypes.string.isRequired,\n  search: PropTypes.string.isRequired,\n  state: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.bool,\n    PropTypes.number,\n    PropTypes.object,\n    PropTypes.string,\n  ]),\n});\n\nexport const historyType = PropTypes.shape({\n  action: PropTypes.oneOf(['PUSH', 'REPLACE', 'POP']).isRequired,\n  block: PropTypes.func.isRequired,\n  canGo: PropTypes.func,\n  createHref: PropTypes.func.isRequired,\n  entries: PropTypes.arrayOf(locationType),\n  go: PropTypes.func.isRequired,\n  goBack: PropTypes.func.isRequired,\n  goForward: PropTypes.func.isRequired,\n  index: PropTypes.number,\n  length: PropTypes.number,\n  listen: PropTypes.func.isRequired,\n  location: locationType.isRequired,\n  push: PropTypes.func.isRequired,\n  replace: PropTypes.func.isRequired,\n});\n\nexport const matchType = PropTypes.shape({\n  isExact: PropTypes.bool,\n  params: PropTypes.object.isRequired,\n  path: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n});\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport SearchScreen from './SearchScreen';\nimport { historyType } from '../../types/reactRouter';\n\nconst SearchScreenContainer = ({\n  history,\n}) => {\n  const onChange = (selectedOption) => {\n    history.push(`/user/${selectedOption.node.username}`);\n  };\n\n  return (\n    <SearchScreen\n      onChange={onChange}\n    />\n  );\n};\n\nSearchScreenContainer.propTypes = {\n  history: historyType.isRequired,\n};\n\nexport default withRouter(SearchScreenContainer);\n","import PropTypes from 'prop-types';\n\nconst type = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  colour: PropTypes.string.isRequired,\n});\n\nexport default type;\n","import PropTypes from 'prop-types';\n\nconst type = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n});\n\nexport default type;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport { styled } from '@material-ui/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport StorgageIcon from '@material-ui/icons/Storage';\nimport WorkIcon from '@material-ui/icons/Work';\nimport userType from '../../types/userType';\n\nconst GitHubAvatar = styled('img')({\n  width: '200px',\n  borderRadius: '16px',\n});\n\nconst StyledPaper = styled(Paper)({\n  padding: '1em',\n});\n\nconst ColouredAvatar = styled(Avatar)({\n  backgroundColor: (props) => props.color,\n});\n\nconst BioBox = styled(Box)({\n  marginBottom: '3em',\n});\n\nconst ListBox = styled(Box)({\n  padding: '1em',\n});\n\nconst UserScreen = ({\n  user,\n  isLoading,\n}) => {\n  const [t] = useTranslation();\n\n  if (isLoading) {\n    return <CircularProgress />;\n  }\n  return (\n    <Container maxWidth=\"lg\">\n      <StyledPaper>\n        <BioBox>\n          <Typography align=\"center\">\n            <GitHubAvatar src={user.image} alt={user.username} />\n          </Typography>\n          <Typography variant=\"h3\" gutterBottom align=\"center\">{user.name}</Typography>\n          <Typography variant=\"h4\" gutterBottom align=\"center\">{user.username}</Typography>\n          <Typography variant=\"h6\" gutterBottom align=\"center\">{user.bio}</Typography>\n        </BioBox>\n        <Box display=\"flex\" justifyContent=\"center\">\n          <ListBox>\n            {user.repositories.length > 0 && (\n              <>\n                <Typography variant=\"h5\" gutterBottom>\n                  {t('Repositories')}\n                  <Chip label={user.totalRepositories} />\n                </Typography>\n                <List dense>\n                  {user.repositories.map((repository) => (\n                    <ListItem key={repository.id} button component=\"a\" href={repository.url} target=\"_blank\">\n                      <ListItemAvatar>\n                        <ColouredAvatar color={repository.colour}>\n                          <StorgageIcon />\n                        </ColouredAvatar>\n                      </ListItemAvatar>\n                      <ListItemText primary={repository.name} />\n                    </ListItem>\n                  ))}\n                </List>\n              </>\n            )}\n          </ListBox>\n          <ListBox>\n            {user.organisations.length > 0 && (\n              <>\n                <Typography variant=\"h5\" gutterBottom>\n                  {t('Organisations')}\n                  <Chip label={user.totalOrganisations} />\n                </Typography>\n                <List dense>\n                  {user.organisations.map((organisation) => (\n                    <ListItem key={organisation.id} button component=\"a\" href={organisation.url} target=\"_blank\">\n                      <ListItemAvatar>\n                        <Avatar>\n                          <WorkIcon />\n                        </Avatar>\n                      </ListItemAvatar>\n                      <ListItemText primary={organisation.name} />\n                    </ListItem>\n                  ))}\n                </List>\n              </>\n            )}\n          </ListBox>\n        </Box>\n      </StyledPaper>\n    </Container>\n  );\n};\n\nUserScreen.propTypes = {\n  user: userType,\n  isLoading: PropTypes.bool.isRequired,\n};\n\nUserScreen.defaultProps = {\n  user: null,\n};\n\nexport default UserScreen;\n","import PropTypes from 'prop-types';\nimport repositoryType from './repositoryType';\nimport organisationType from './organisationType';\n\nconst type = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  bio: PropTypes.string.isRequired,\n  repositories: PropTypes.arrayOf(repositoryType).isRequired,\n  totalRepositories: PropTypes.number.isRequired,\n  organisations: PropTypes.arrayOf(organisationType).isRequired,\n  totalOrganisations: PropTypes.number.isRequired,\n});\n\nexport default type;\n","const dataTransformer = ({ user }) => ({\n  id: user.id,\n  name: user.name,\n  username: user.login,\n  bio: user.bio,\n  image: user.avatarUrl,\n  repositories: user.repositories.edges.map((edge) => ({\n    id: edge.node.id,\n    name: edge.node.name,\n    url: edge.node.url,\n    colour: edge.node.primaryLanguage.color,\n  })),\n  totalRepositories: user.repositories.totalCount,\n  organisations: user.organizations.edges.map((edge) => ({\n    id: edge.node.id,\n    name: edge.node.name,\n    url: edge.node.url,\n  })),\n  totalOrganisations: user.organizations.totalCount,\n});\n\nexport default dataTransformer;\n","import SearchScreen from './screens/SearchScreen';\nimport UserScreen from './screens/UserScreen';\nimport RepositoriesScreen from './screens/RepositoriesScreen';\nimport OrganisationsScreen from './screens/OrganisationsScreen';\n\nexport default [\n  {\n    path: '/',\n    component: SearchScreen,\n  },\n  {\n    path: '/user/:username',\n    component: UserScreen,\n  },\n  {\n    path: '/user/:username/repositories',\n    component: RepositoriesScreen,\n  },\n  {\n    path: '/user/:username/organisations',\n    component: OrganisationsScreen,\n  },\n];\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { withRouter } from 'react-router-dom';\nimport { matchType } from '../../types/reactRouter';\nimport UserScreen from './UserScreen';\nimport { getUserByUsernameQuery } from './queries.gql';\nimport dataTransformer from './dataTransformer';\n\nconst UserScreenContainer = ({\n  match,\n}) => {\n  const { loading, error, data } = useQuery(getUserByUsernameQuery, {\n    variables: { username: match.params.username },\n  });\n\n  if (error) {\n    // TODO: add error into a global snackbar notification\n  }\n\n  const user = data && !loading ? dataTransformer(data) : null;\n\n  return (\n    <UserScreen\n      isLoading={loading}\n      user={user}\n    />\n  );\n};\n\nUserScreenContainer.propTypes = {\n  match: matchType.isRequired,\n};\n\nexport default withRouter(UserScreenContainer);\n","import React from 'react';\n\nconst RepositoriesScreen = () => (\n  <p>Repositories screen</p>\n);\n\nexport default RepositoriesScreen;\n","import React from 'react';\n\nconst OrganisationsScreen = () => (\n  <p>Organisations screen</p>\n);\n\nexport default OrganisationsScreen;\n","import NotFoundScreen from './NotFoundScreen';\n\nexport default NotFoundScreen;\n","import React from 'react';\n\nconst NotFoundScreen = () => (\n  <p>Not found</p>\n);\n\nexport default NotFoundScreen;\n","import React from 'react';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport apolloClient from './services/apolloClient';\nimport routes from './routes';\nimport NotFoundScreen from './screens/NotFoundScreen';\n\nconst renderRoutes = (defintions) => defintions.map((route) => (\n  <Route exact key={route.path} path={route.path} component={route.component} />\n));\n\nconst App = () => (\n  <ApolloProvider client={apolloClient}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        {renderRoutes(routes)}\n        <Route component={NotFoundScreen} />\n      </Switch>\n    </BrowserRouter>\n  </ApolloProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"searchUsersQuery\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"query\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"search\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"query\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"query\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"value\":{\"kind\":\"EnumValue\",\"value\":\"USER\"}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"first\"},\"value\":{\"kind\":\"IntValue\",\"value\":\"5\"}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"after\"},\"value\":{\"kind\":\"NullValue\"}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"edges\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"node\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"InlineFragment\",\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"User\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"login\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"repositories\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"totalCount\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"organizations\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"totalCount\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":341}};\n    doc.loc.source = {\"body\":\"query searchUsersQuery($query: String!) {\\n  search(query: $query type: USER first: 5 after: null) {\\n    edges {\\n      node {\\n        ... on User {\\n          id\\n          name\\n          login\\n          repositories {\\n            totalCount\\n          }\\n          organizations {\\n            totalCount\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"searchUsersQuery\"] = oneQuery(doc, \"searchUsersQuery\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getUserByUsernameQuery\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"user\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"login\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"login\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"bio\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"avatarUrl\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"repositories\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"first\"},\"value\":{\"kind\":\"IntValue\",\"value\":\"6\"}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"after\"},\"value\":{\"kind\":\"NullValue\"}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"edges\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"node\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"url\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"primaryLanguage\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"color\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]}]}}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"totalCount\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"organizations\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"first\"},\"value\":{\"kind\":\"IntValue\",\"value\":\"6\"}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"after\"},\"value\":{\"kind\":\"NullValue\"}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"edges\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"node\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"url\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"totalCount\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":513}};\n    doc.loc.source = {\"body\":\"query getUserByUsernameQuery($username: String!) {\\n  user(login: $username) {\\n    id\\n    name\\n    login\\n    bio\\n    avatarUrl\\n    repositories(first: 6 after: null) {\\n      edges {\\n        node {\\n          id\\n          name\\n          url\\n          primaryLanguage {\\n            color\\n            name\\n          }\\n        }\\n      }\\n      totalCount\\n    }\\n    organizations(first: 6 after: null) {\\n      edges {\\n        node {\\n          id\\n          name\\n          url\\n        }\\n      }\\n      totalCount\\n    }\\n  }\\n}\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"getUserByUsernameQuery\"] = oneQuery(doc, \"getUserByUsernameQuery\");\n        \n"],"sourceRoot":""}